{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\kelvi\\\\Downloads\\\\Documents\\\\REACTWEB5\\\\src\\\\context.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport data from './data';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst PropDrilling = () => {\n  _s();\n  const [people, setPeople] = useState(data);\n  cont;\n  const removePerson = id => {\n    setPeople(people => {\n      return people.filter(person => person.id !== id);\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"section\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"context api\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(List, {\n      people: people,\n      removePerson: removePerson\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 9\n  }, this);\n};\n_s(PropDrilling, \"1LkHEtj2RWqZMtew8JQSoeuNX/M=\");\n_c = PropDrilling;\nconst List = _ref => {\n  let {\n    people,\n    removePerson\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: people.map(person => {\n      return /*#__PURE__*/_jsxDEV(SinglePerson, {\n        ...person,\n        removePerson: removePerson\n      }, person.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 13\n      }, this);\n    })\n  }, void 0, false);\n};\n_c2 = List;\nconst SinglePerson = _ref2 => {\n  let {\n    id,\n    name,\n    removePerson\n  } = _ref2;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"btn\",\n      onClick: () => removePerson(id),\n      children: \"remove\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 9\n  }, this);\n};\n_c3 = SinglePerson;\nexport default PropDrilling;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"PropDrilling\");\n$RefreshReg$(_c2, \"List\");\n$RefreshReg$(_c3, \"SinglePerson\");","map":{"version":3,"names":["React","useState","data","jsxDEV","_jsxDEV","Fragment","_Fragment","PropDrilling","_s","people","setPeople","cont","removePerson","id","filter","person","className","children","fileName","_jsxFileName","lineNumber","columnNumber","List","_c","_ref","map","SinglePerson","_c2","_ref2","name","onClick","_c3","$RefreshReg$"],"sources":["C:/Users/kelvi/Downloads/Documents/REACTWEB5/src/context.js"],"sourcesContent":["import React, { useState } from 'react'\r\nimport data from './data'\r\n const PropDrilling = () => {\r\n    const [people, setPeople] = useState(data)\r\n    cont\r\n    const removePerson = (id) => {\r\n            setPeople((people)=>{\r\n                return people.filter((person)=> person.id !==id)\r\n                })\r\n            }\r\n           return (\r\n        <section className='section'>\r\n            <h1>context api</h1>\r\n            <List people={people} removePerson={removePerson}/>\r\n        </section>\r\n  )\r\n}\r\n  const List = ({people, removePerson}) => {\r\n    return <>\r\n    {people.map((person)=>{\r\n        return(\r\n            <SinglePerson key={person.id} {...person} removePerson={removePerson}/>\r\n        )\r\n    })}\r\n    </>\r\n  }\r\n  const SinglePerson = ({id, name, removePerson}) => {\r\n    return(\r\n        <div >\r\n            <h2>{name}</h2>\r\n            <button className='btn' onClick={()=>removePerson(id)}>remove</button>\r\n        </div>\r\n    )\r\n  }\r\n\r\nexport default PropDrilling"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,IAAI,MAAM,QAAQ;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AACxB,MAAMC,YAAY,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACxB,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGT,QAAQ,CAACC,IAAI,CAAC;EAC1CS,IAAI;EACJ,MAAMC,YAAY,GAAIC,EAAE,IAAK;IACrBH,SAAS,CAAED,MAAM,IAAG;MAChB,OAAOA,MAAM,CAACK,MAAM,CAAEC,MAAM,IAAIA,MAAM,CAACF,EAAE,KAAIA,EAAE,CAAC;IAChD,CAAC,CAAC;EACN,CAAC;EACF,oBACHT,OAAA;IAASY,SAAS,EAAC,SAAS;IAAAC,QAAA,gBACxBb,OAAA;MAAAa,QAAA,EAAI;IAAW;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAK,eACpBjB,OAAA,CAACkB,IAAI;MAACb,MAAM,EAAEA,MAAO;MAACG,YAAY,EAAEA;IAAa;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAE;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QAC7C;AAElB,CAAC;AAAAb,EAAA,CAdMD,YAAY;AAAAgB,EAAA,GAAZhB,YAAY;AAejB,MAAMe,IAAI,GAAGE,IAAA,IAA4B;EAAA,IAA3B;IAACf,MAAM;IAAEG;EAAY,CAAC,GAAAY,IAAA;EAClC,oBAAOpB,OAAA,CAAAE,SAAA;IAAAW,QAAA,EACNR,MAAM,CAACgB,GAAG,CAAEV,MAAM,IAAG;MAClB,oBACIX,OAAA,CAACsB,YAAY;QAAA,GAAqBX,MAAM;QAAEH,YAAY,EAAEA;MAAa,GAAlDG,MAAM,CAACF,EAAE;QAAAK,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAA2C;IAE/E,CAAC;EAAC,iBACC;AACL,CAAC;AAAAM,GAAA,GARKL,IAAI;AASV,MAAMI,YAAY,GAAGE,KAAA,IAA8B;EAAA,IAA7B;IAACf,EAAE;IAAEgB,IAAI;IAAEjB;EAAY,CAAC,GAAAgB,KAAA;EAC5C,oBACIxB,OAAA;IAAAa,QAAA,gBACIb,OAAA;MAAAa,QAAA,EAAKY;IAAI;MAAAX,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAM,eACfjB,OAAA;MAAQY,SAAS,EAAC,KAAK;MAACc,OAAO,EAAEA,CAAA,KAAIlB,YAAY,CAACC,EAAE,CAAE;MAAAI,QAAA,EAAC;IAAM;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAS;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACpE;AAEZ,CAAC;AAAAU,GAAA,GAPKL,YAAY;AASpB,eAAenB,YAAY;AAAA,IAAAgB,EAAA,EAAAI,GAAA,EAAAI,GAAA;AAAAC,YAAA,CAAAT,EAAA;AAAAS,YAAA,CAAAL,GAAA;AAAAK,YAAA,CAAAD,GAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}